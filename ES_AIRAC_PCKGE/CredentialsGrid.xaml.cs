using System;
using System.Windows;
using System.Windows.Controls;
using ES_AIRAC_PCKGE.Services;
using ES_AIRAC_PCKGE.EnumsList;

namespace ES_AIRAC_PCKGE
{
    public partial class CredentialsGrid : UserControl
    {
        private ConfigService _configService;
        private LoggerService _loggerService;

        // Declare TextBox controls
        /*private TextBox NameTextBox;
        private TextBox CIDTextBox;
        private TextBox PasswordTextBox;
        private TextBox CPDLCTextBox;*/

        public CredentialsGrid()
        {
            InitializeComponents();
            _configService = new ConfigService();
            _loggerService = new LoggerService();
            //InitializeControls();
            //LoadCredentials();
            //InitializeEventHandlers();
        }

        private void InitializeComponents()
        {
            // This method is typically auto-generated by the XAML compiler
            // We're adding it manually as a temporary workaround
            System.Uri resourceLocater = new System.Uri("/ES_AIRAC_PCKGE;component/CredentialsGrid.xaml", System.UriKind.Relative);
            System.Windows.Application.LoadComponent(this, resourceLocater);
        }

        private void InitializeControls()
        {
            NameTextBox = (TextBox)FindName("NameTextBox");
            CIDTextBox = (TextBox)FindName("CIDTextBox");
            PasswordTextBox = (TextBox)FindName("PasswordTextBox");
            CPDLCTextBox = (TextBox)FindName("CPDLCTextBox");
        }

        private void InitializeEventHandlers()
        {
            var saveButton = (Button)FindName("SaveButton");
            if (saveButton != null)
            {
                saveButton.Click += SaveButton_Click;
            }
        }

        private void LoadCredentials()
        {
            var config = _configService.GetConfig();
            NameTextBox.Text = config.GetVatsimUsername();
            CIDTextBox.Text = config.GetVatsimCID();
            PasswordTextBox.Text = config.GetVatsimPassword();
            CPDLCTextBox.Text = config.GetHoppieCode();
        }

        private void SaveButton_Click(object sender, RoutedEventArgs e)
        {
            if (ValidateInput())
            {
                SaveCredentials();
                MessageBox.Show("Credentials saved successfully!", "Success", MessageBoxButton.OK, MessageBoxImage.Information);
            }
        }

        private bool ValidateInput()
        {
            if (string.IsNullOrWhiteSpace(NameTextBox.Text) ||
                string.IsNullOrWhiteSpace(CIDTextBox.Text) ||
                string.IsNullOrWhiteSpace(PasswordTextBox.Text) ||
                string.IsNullOrWhiteSpace(CPDLCTextBox.Text))
            {
                MessageBox.Show("All fields are required.", "Validation Error", MessageBoxButton.OK, MessageBoxImage.Error);
                return false;
            }

            if (!int.TryParse(CIDTextBox.Text, out _))
            {
                MessageBox.Show("CID must be a valid number.", "Validation Error", MessageBoxButton.OK, MessageBoxImage.Error);
                return false;
            }

            return true;
        }

        private async void SaveCredentials()
        {
            try
            {
                _configService.SetVatsimUsername(NameTextBox.Text);
                _configService.SetVatsimCID(CIDTextBox.Text);
                _configService.SetVatsimPassword(PasswordTextBox.Text);
                _configService.SetHoppieCode(CPDLCTextBox.Text);
                await _configService.SaveConfig();
                _loggerService.LogMessage(SeverityLevelType.Info, "Credentials saved successfully");
            }
            catch (Exception ex)
            {
                _loggerService.LogMessage(SeverityLevelType.Error, $"Error saving credentials: {ex.Message}");
                MessageBox.Show($"An error occurred while saving credentials: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }
    }
}